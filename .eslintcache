[{"/Users/robertmaurizi/Sites/react/medbase/src/index.js":"1","/Users/robertmaurizi/Sites/react/medbase/src/App.js":"2","/Users/robertmaurizi/Sites/react/medbase/src/services/firebase.js":"3","/Users/robertmaurizi/Sites/react/medbase/src/pages/Login.js":"4","/Users/robertmaurizi/Sites/react/medbase/src/helpers/auth.js":"5","/Users/robertmaurizi/Sites/react/medbase/src/pages/SignUp.js":"6","/Users/robertmaurizi/Sites/react/medbase/src/components/Person.js":"7","/Users/robertmaurizi/Sites/react/medbase/src/pages/PeopleList.js":"8","/Users/robertmaurizi/Sites/react/medbase/src/components/NewMedication.js":"9","/Users/robertmaurizi/Sites/react/medbase/src/components/MedList.js":"10","/Users/robertmaurizi/Sites/react/medbase/src/components/Medication.js":"11"},{"size":156,"mtime":1610123274805,"results":"12","hashOfConfig":"13"},{"size":2306,"mtime":1610283553032,"results":"14","hashOfConfig":"13"},{"size":557,"mtime":1610123523546,"results":"15","hashOfConfig":"13"},{"size":2569,"mtime":1610125101897,"results":"16","hashOfConfig":"13"},{"size":401,"mtime":1610124240421,"results":"17","hashOfConfig":"13"},{"size":2554,"mtime":1610125021366,"results":"18","hashOfConfig":"13"},{"size":1487,"mtime":1610224412323,"results":"19","hashOfConfig":"13"},{"size":3626,"mtime":1610223970125,"results":"20","hashOfConfig":"13"},{"size":7444,"mtime":1610224408180,"results":"21","hashOfConfig":"13"},{"size":1492,"mtime":1610223146136,"results":"22","hashOfConfig":"13"},{"size":6372,"mtime":1610285303010,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"weobj3",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/robertmaurizi/Sites/react/medbase/src/index.js",[],["50","51"],"/Users/robertmaurizi/Sites/react/medbase/src/App.js",[],"/Users/robertmaurizi/Sites/react/medbase/src/services/firebase.js",[],"/Users/robertmaurizi/Sites/react/medbase/src/pages/Login.js",[],"/Users/robertmaurizi/Sites/react/medbase/src/helpers/auth.js",[],"/Users/robertmaurizi/Sites/react/medbase/src/pages/SignUp.js",["52"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { signup, signInWithGoogle } from '../helpers/auth';\n\nexport default class SignUp extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: null,\n            email: '',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.googleSignIn = this.googleSignIn.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n\n        this.setState({error: ''});\n        try {\n            await signup(this.state.email, this.state.password);\n        } catch (error) {\n            this.setState({error: error.message });\n        }\n    }\n\n    async googleSignIn() {\n        try {\n            await signInWithGoogle();\n        } catch (error) {\n            this.setState({error: error.message});\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <h2>Create an account</h2>\n                    <fieldset>\n                        <legend>Create an account with email &amp; password</legend>\n                        <div>\n                            <label htmlFor=\"email\">Email Address</label>\n                            <input id=\"email\" placeholder=\"email@server.com\" name=\"email\" type=\"email\" onChange={this.handleChange} value={this.state.email} />\n                        </div>\n                        <div>\n                            <label htmlFor=\"password\">Password</label>\n                            <input id=\"password\" placeholder=\"Password\" name=\"password\" type=\"password\" onChange={this.handleChange} value={this.state.password} />\n                        </div>\n                        <div>\n                            {this.state.error ? (\n                                <p>{this.state.error}</p>\n                            ): null }\n                            <button type=\"submit\">Sign Up</button>\n                        </div>\n                    </fieldset>\n                    <fieldset>\n                        <legend>Sign up with your Google account</legend>\n                        <button type=\"button\" onClick={this.googleSignIn}>Sign Up with Google</button>\n                    </fieldset>\n                </form>\n            </div>\n        )\n    }\n\n\n}","/Users/robertmaurizi/Sites/react/medbase/src/components/Person.js",[],"/Users/robertmaurizi/Sites/react/medbase/src/pages/PeopleList.js",[],"/Users/robertmaurizi/Sites/react/medbase/src/components/NewMedication.js",["53"],"import React from 'react';\nimport EasyEdit from 'react-easy-edit';\nimport { Button, Card } from 'semantic-ui-react'\n\nimport { auth, db } from '../services/firebase';\n\nexport default class NewMedication extends React.Component {\n\n    FREQ_UNITS = ['daily','weekly','monthly','as needed'];\n\n    constructor(props) {\n        super(props);\n\n        this.path = `users/${auth().currentUser.uid}/${this.props.person.key}`;\n\n        this.emptyMed = {name: '', strength: '', frequencyAmt: '', frequencyUnit: this.FREQ_UNITS[0], doctor: '', notes: ''};\n\n\n        this.state = {\n            person: this.props.person,\n            medication: this.emptyMed\n        }\n\n    }\n\n    handleSave = (key, value) => {\n        // console.log(key, value);\n        const theMed = {...this.state.medication};\n        // const key = event.target.name;\n        // const value = event.target.value;\n        theMed[key] = value;\n\n        this.setState({\n            medication: theMed\n        });\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            const newMedRef = await db.ref(`${this.path}/meds`).push();\n            newMedRef.set(this.state.medication);\n            this.setState({medication: this.emptyMed });\n        } catch(error) {\n            console.log(error.message);\n        }\n    }\n\n    render() {\n\n        const { medication } = this.state;\n        // console.log(medication);\n\n        let unitOpts = [];\n        this.FREQ_UNITS.forEach( unit => {\n            unitOpts.push({label: unit, value: unit});\n        });\n\n        return (\n\n            <Card.Content>\n                <Card.Header>\n                    <EasyEdit\n                        type=\"text\"\n                        onSave={ (val) => { this.handleSave('name', val); } }\n                        onCancel={ () => {} }\n                        attributes={{name: \"name\" }}\n                        placeholder='Add Medication'\n                        saveOnBlur\n                        value={this.state.medication.name}\n                    />       \n\n                    <span className=\"right floated\">\n                        <EasyEdit\n                            type=\"text\"\n                            onSave={ (val) => { this.handleSave('strength', val); } }\n                            onCancel={ () => {} }\n                            attributes={{name: \"strength\" }}\n                            placeholder='Strength'\n                            saveOnBlur\n                            value={this.state.medication.strength}\n                        />\n                    </span>                \n                </Card.Header>\n\n                <Card.Description>\n                    <EasyEdit\n                        type=\"number\"\n                        onSave={ (val) => { this.handleSave('frequencyAmt', val); } }\n                        onCancel={ () => {} }\n                        attributes={{name: \"frequenceyAmt\", \"min\": 1 }}\n                        placeholder='Frequency'\n                        saveOnBlur\n                        value={this.state.medication.frequencyAmt}\n                    />\n                    &nbsp;\n                    <EasyEdit\n                        type=\"select\"\n                        onSave={ (val) => { this.handleSave('frequencyUnit', val); } }\n                        onCancel={ () => {} }\n                        attributes={{name: \"frequencyUnit\" }}\n                        options={unitOpts}\n                        placeholder=\"per...\"\n                        saveOnBlur\n                        value={this.state.medication.frequencyUnit}\n                    />                       \n\n                    <span className=\"right floated\">\n                        <i className=\"user icon\"></i> \n                        <EasyEdit\n                            type=\"text\"\n                            onSave={ (val) => { this.handleSave('doctor', val); } }\n                            onCancel={ () => {} }\n                            attributes={{name: \"doctor\" }}\n                            placeholder='Doctor'\n                            saveOnBlur\n                            value={this.state.medication.doctor}\n                        />\n                    </span>\n\n                </Card.Description>\n                <Card.Meta>\n                    <EasyEdit\n                        type=\"text\"\n                        onSave={ (val) => { this.handleSave('notes', val); } }\n                        onCancel={ () => {} }\n                        attributes={{name: \"notes\" }}\n                        placeholder='Notes'\n                        saveOnBlur\n                        value={this.state.medication.notes}\n                    />\n                </Card.Meta>\n\n                <Button compact primary floated='right' onClick={this.handleSubmit}>Save</Button>\n                \n            </Card.Content>\n                         \n        );\n\n        // return(\n        //     <div>\n        //         <h2>Add Medication</h2>\n        //         <form className=\"ui form\" onSubmit={this.handleSubmit}>\n        //             <div className=\"field\">\n        //                 <label>Medication Name</label>\n        //                 <input type=\"text\" name=\"name\" onChange={this.handleChange} value={medication.name} />\n        //             </div>\n\n        //             <div className=\"field\">\n        //                 <label>Strength</label>\n        //                 <input type=\"text\" name=\"strength\" onChange={this.handleChange} value={medication.strength} />\n        //             </div>\n\n        //             <div className=\"field\">\n        //                 <label>Frequency</label>\n        //                 <div className=\"two fields\">\n        //                     <div className=\"field\">\n        //                         <input type=\"number\" min=\"1\" step=\"1\" name=\"frequencyAmt\" onChange={this.handleChange} value={medication.frequencyAmt} />\n        //                     </div>\n        //                     <div className=\"field\">\n        //                         <select name=\"frequencyUnit\" className=\"ui fluid dropdown\" onChange={this.handleChange} value={medication.frequencyUnit}>\n        //                             { this.FREQ_UNITS.map( unit => {\n        //                                 return (this.state.medication.frequencyUnit === unit ) ? (<option key={unit} value={unit} selected>{ unit }</option>) : (<option key={unit} value={unit}>{unit}</option>)\n        //                             })\n        //                         }\n        //                         </select>\n        //                     </div>\n        //                 </div>\n        //             </div>\n\n        //             <div className=\"field\">\n        //                 <label>Doctor</label>\n        //                 <input type=\"text\" name=\"doctor\" onChange={this.handleChange} value={medication.doctor} />\n        //             </div>\n\n        //             <div className=\"field\">\n        //                 <label>Notes</label>\n        //                 <textarea name=\"notes\" onChange={this.handleChange} value={medication.notes}></textarea>\n        //             </div>\n\n        //             <div className=\"field\">\n        //                 <button type=\"submit\" className=\"ui primary basic button\">Add Medication</button>\n        //             </div>\n\n        //         </form>\n        //     </div>\n        // )\n    }\n\n\n}","/Users/robertmaurizi/Sites/react/medbase/src/components/MedList.js",["54"],"import React from 'react';\nimport { Button, Card } from 'semantic-ui-react'\n\nimport { auth, db } from '../services/firebase';\n\nimport Medication from './Medication';\nimport NewMedication from './NewMedication';\n\nexport default class MedList extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: auth().currentUser,\n            meds: [],\n            readError: null,\n            writeError: null\n        };\n\n        this.path = `users/${auth().currentUser.uid}/${this.props.person.key}/meds/`;\n\n    }\n\n    async componentDidMount() {\n        this.setState( { readError: null } );\n\n        try {\n            db.ref(this.path).on('value', snapshot => {\n                let meds = [];\n                snapshot.forEach( snap => {\n                    const theMed = { key: snap.ref.path.pieces_[snap.ref.path.pieces_.length -1 ], ...snap.val() }\n                    meds.push(theMed);\n                });\n\n                this.setState({ meds });\n            });\n        } catch(error) {\n            this.setState({readError: error.message});\n        }\n    }\n\n\n    render() {\n        return (\n            <Card.Group>\n                { this.state.meds.map( med => {\n                    return <Card key={med.key}><Medication med={med} person={this.props.person} /></Card>\n                })}            \n                <Card key=\"newMed\"><NewMedication person={this.props.person} /></Card>\n            </Card.Group>\n        );\n    }\n\n}","/Users/robertmaurizi/Sites/react/medbase/src/components/Medication.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":14},{"ruleId":"59","severity":1,"message":"63","line":52,"column":17,"nodeType":"61","messageId":"62","endLine":52,"endColumn":27},{"ruleId":"59","severity":1,"message":"64","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":16},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'medication' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]