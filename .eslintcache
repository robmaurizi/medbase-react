[{"/Users/robertmaurizi/Sites/react/medbase/src/index.js":"1","/Users/robertmaurizi/Sites/react/medbase/src/App.js":"2","/Users/robertmaurizi/Sites/react/medbase/src/services/firebase.js":"3","/Users/robertmaurizi/Sites/react/medbase/src/pages/Login.js":"4","/Users/robertmaurizi/Sites/react/medbase/src/helpers/auth.js":"5","/Users/robertmaurizi/Sites/react/medbase/src/pages/SignUp.js":"6","/Users/robertmaurizi/Sites/react/medbase/src/components/Person.js":"7","/Users/robertmaurizi/Sites/react/medbase/src/pages/PeopleList.js":"8","/Users/robertmaurizi/Sites/react/medbase/src/components/NewMedication.js":"9","/Users/robertmaurizi/Sites/react/medbase/src/components/MedList.js":"10","/Users/robertmaurizi/Sites/react/medbase/src/components/Medication.js":"11"},{"size":156,"mtime":1610123274805,"results":"12","hashOfConfig":"13"},{"size":2306,"mtime":1610283553032,"results":"14","hashOfConfig":"13"},{"size":557,"mtime":1610123523546,"results":"15","hashOfConfig":"13"},{"size":2569,"mtime":1610125101897,"results":"16","hashOfConfig":"13"},{"size":401,"mtime":1610124240421,"results":"17","hashOfConfig":"13"},{"size":2554,"mtime":1610125021366,"results":"18","hashOfConfig":"13"},{"size":3371,"mtime":1610293414591,"results":"19","hashOfConfig":"13"},{"size":3683,"mtime":1610294221907,"results":"20","hashOfConfig":"13"},{"size":4861,"mtime":1610291745604,"results":"21","hashOfConfig":"13"},{"size":1492,"mtime":1610223146136,"results":"22","hashOfConfig":"13"},{"size":7294,"mtime":1610293147024,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"weobj3",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/robertmaurizi/Sites/react/medbase/src/index.js",[],["49","50"],"/Users/robertmaurizi/Sites/react/medbase/src/App.js",[],"/Users/robertmaurizi/Sites/react/medbase/src/services/firebase.js",[],"/Users/robertmaurizi/Sites/react/medbase/src/pages/Login.js",[],"/Users/robertmaurizi/Sites/react/medbase/src/helpers/auth.js",[],"/Users/robertmaurizi/Sites/react/medbase/src/pages/SignUp.js",["51"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { signup, signInWithGoogle } from '../helpers/auth';\n\nexport default class SignUp extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: null,\n            email: '',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.googleSignIn = this.googleSignIn.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n\n        this.setState({error: ''});\n        try {\n            await signup(this.state.email, this.state.password);\n        } catch (error) {\n            this.setState({error: error.message });\n        }\n    }\n\n    async googleSignIn() {\n        try {\n            await signInWithGoogle();\n        } catch (error) {\n            this.setState({error: error.message});\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <h2>Create an account</h2>\n                    <fieldset>\n                        <legend>Create an account with email &amp; password</legend>\n                        <div>\n                            <label htmlFor=\"email\">Email Address</label>\n                            <input id=\"email\" placeholder=\"email@server.com\" name=\"email\" type=\"email\" onChange={this.handleChange} value={this.state.email} />\n                        </div>\n                        <div>\n                            <label htmlFor=\"password\">Password</label>\n                            <input id=\"password\" placeholder=\"Password\" name=\"password\" type=\"password\" onChange={this.handleChange} value={this.state.password} />\n                        </div>\n                        <div>\n                            {this.state.error ? (\n                                <p>{this.state.error}</p>\n                            ): null }\n                            <button type=\"submit\">Sign Up</button>\n                        </div>\n                    </fieldset>\n                    <fieldset>\n                        <legend>Sign up with your Google account</legend>\n                        <button type=\"button\" onClick={this.googleSignIn}>Sign Up with Google</button>\n                    </fieldset>\n                </form>\n            </div>\n        )\n    }\n\n\n}","/Users/robertmaurizi/Sites/react/medbase/src/components/Person.js",[],"/Users/robertmaurizi/Sites/react/medbase/src/pages/PeopleList.js",[],"/Users/robertmaurizi/Sites/react/medbase/src/components/NewMedication.js",[],"/Users/robertmaurizi/Sites/react/medbase/src/components/MedList.js",["52"],"import React from 'react';\nimport { Button, Card } from 'semantic-ui-react'\n\nimport { auth, db } from '../services/firebase';\n\nimport Medication from './Medication';\nimport NewMedication from './NewMedication';\n\nexport default class MedList extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: auth().currentUser,\n            meds: [],\n            readError: null,\n            writeError: null\n        };\n\n        this.path = `users/${auth().currentUser.uid}/${this.props.person.key}/meds/`;\n\n    }\n\n    async componentDidMount() {\n        this.setState( { readError: null } );\n\n        try {\n            db.ref(this.path).on('value', snapshot => {\n                let meds = [];\n                snapshot.forEach( snap => {\n                    const theMed = { key: snap.ref.path.pieces_[snap.ref.path.pieces_.length -1 ], ...snap.val() }\n                    meds.push(theMed);\n                });\n\n                this.setState({ meds });\n            });\n        } catch(error) {\n            this.setState({readError: error.message});\n        }\n    }\n\n\n    render() {\n        return (\n            <Card.Group>\n                { this.state.meds.map( med => {\n                    return <Card key={med.key}><Medication med={med} person={this.props.person} /></Card>\n                })}            \n                <Card key=\"newMed\"><NewMedication person={this.props.person} /></Card>\n            </Card.Group>\n        );\n    }\n\n}","/Users/robertmaurizi/Sites/react/medbase/src/components/Medication.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":14},{"ruleId":"57","severity":1,"message":"61","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":16},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]